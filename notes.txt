I'm not sure how best to design the concept of a color pattern
so basically
each device has a set of available patterns
each pattern has its own set of parameters
these patterns may be dynamically updated models (like a beat model, for example, which is being changed every time new beat data comes in)
somehow, the pattern must go from parameters to a list of RGB values (aka render)
the rate at which you push the rendered frames to the device
depends on whether or not the device has sent back an "OK" message
however, this will obviously vary from device to device
so the central server must maintain the constant "frame rate" if you will
meaning all patterns must be synchronized to real world time despite not displaying every 1 sec or 2 sec perfectly
so an idea I had was
design individual patterns for each device
then have a set of patterns that are synchronized patterns
where one set of parameters (Rate, color, etc) dictates what all the devices display
therefore you either have synchronized mode or desynchronized mode
does that make sense? it seems non trivial to synchronize two patterns that have differing parameters
unless you standardize your parameter types/values/scales
does this all make snese?
sense*
35 mins
Joey Rafidi
Merritt Boyd
yeah, I think so
so where is the actual rendering happening — on the edges of the system, ie on the raspis and arduinos, or on the control server? on the edges, right?
Merritt • 34 mins
it happens on the control server
the conversion from parameters to actual RGB values happens on the server
which then pushes to the devices
this is apparently how the dancefloor controller we plan to use works
33 mins
Joey Rafidi
Merritt Boyd
ok, sounds good, as long as you have enough bandwidth
Merritt • 32 mins
well, that pixelpusher thing definitely does. whether or not the raspi can do it is another question we haven't quite answered
plan to answer in roughly 3 hours
32 mins
Joey Rafidi
Merritt Boyd
cool
so instead of sharing parameters between patterns in the synchronized case, why not just let a single pattern render for multiple devices? might be more flexible
Merritt • 30 mins
so the pattern would have like "renderDDF" and "render GL"?
GL = goodale lounge
29 mins
Joey Rafidi
Merritt Boyd
yeah, something like that
Merritt • 28 mins
yea that makes sense
does it make sense for patterns to be classes
27 mins
Joey Rafidi
Merritt Boyd
yeah, absolutely
Merritt • 27 mins
okay cool
I'm also going to see if we can do combination patterns
so a pattern that is one pattern on top of another
just depends on how fast this server can calculate frames
one thing I was thinking was
if you do a pattern and it loops
just cache the frames
so you don't have to calculate shit anymore
25 mins
Joey Rafidi
Merritt Boyd
yeah, that sounds like something you'd do in pattern space, by having a superclass pattern that handles the caching and calls a delegate method in the subclasses to do the actual rendering
pattern server doesn't need to care about how the patterns want to cache their shit
Merritt • 23 mins
yea
oh oh and I can also do that double frame buffering thing
or maybe there's even a way to calculate ahead
well, er
I don't think I want patterns rendering themselves ahead of time on their own threads
that would be... annoying
I'd much rather have them be a shared object that the async I/O threads call render on
however, I don't actually know what Twisted is doing
22 mins
Joey Rafidi
Merritt Boyd
yeah, and you don't really need to double buffer in the server; that sort of thing is handled by the output devices
Merritt • 22 mins
hmm you're right
perhaps I should make my output device code smarter than 1 frame at a time
for now the raspi code is super simple
21 mins
Joey Rafidi
Merritt Boyd
well, depending on how the server works you may want to specify display timestamps for the device frames, to get really good sync
if the server is singlethreaded and sends frames round-robin to the output devices, you'll want to tell the devices you send frames to first to delay actually outputing those
Merritt • 20 mins
thing is, I think the server is multitheraded
I think somehow
Twisted spins off a new thread to handle your protocol
whenever a new connection is made
20 mins
Joey Rafidi
Merritt Boyd
ok, then it's less important, but will still reduce display jitter
Merritt • 19 mins
yea
we'll see though
I should look it up
timestamps is a good idea
I did not think about that..
19 mins
Joey Rafidi
Merritt Boyd
the thing is too, since it's python you're not really multithreaded if you're cpu bound
Merritt • 19 mins
also another question
19 mins
Joey Rafidi
Merritt Boyd
so if your patterns are compute-heavy, you'll still have sync issues
Merritt • 19 mins
so like
I know in coffee if I have custom params for a function, it's customary to just accept a generic javascript object
then pull out what you "expect"
however, I'm pretty sure this isn't how python works
18 mins
Joey Rafidi
Merritt Boyd
because fuck any kind of type safety, right
the equivalent of that in python is to just accept a dict
Merritt • 18 mins
yea
18 mins
Joey Rafidi
Merritt Boyd
but that's kind of bad form
Merritt • 17 mins
I know I can do that
yea that's what I meant
it's not how it should be done
should I just override the constructor and give my own param list?
17 mins
Joey Rafidi
Merritt Boyd
can default arguments get you most of the way there?
Merritt • 17 mins
eh, I think so
I dunno, some of these things might get mega complex
I'll try to set a bound on parameters accepted
like a pattern should only have at most x parameters
before it gets too arbitrarily complex
16 mins
Joey Rafidi
Merritt Boyd
hmmm
you can play some metaprogramming games to generate getters and setters for the params in the pattern, but that doesn't help you set them on the server side
yeah, to be honest it's probably easiest to just use a dictionary of params per pattern object, and have a validation function that you can call to keep things a little safer
Merritt • 13 mins
mkay
the good news is
wait so
each pattern defines its own validation function?
or each pattern has some list of expected params
and then on construction, the constructor goes through that list and check
checks*
then throws something nasty if it's wrong
12 mins
Joey Rafidi
Merritt Boyd
well not on construction, 'cause presumably you just initialized the params to defaults, but you should validate when something gets set and before you draw
Merritt • 12 mins
ah
oh so you're saying that the params don't get passed in construction?
11 mins
Joey Rafidi
Merritt Boyd
presumably not; the use case I'm imagining is that the user selects the pattern via some interface, then gets a configuration screen
so there should be some defaults so you can see what the pattern looks like without having to pick 5 colors
Merritt • 10 mins
ahhhh that makes sense!
but
that means that eveyr time I change patterns, I pass through the default first
which will be undesirable in many cases
unless by displaying you mean I only show a web version before doing the real thing
like perhaps they pick a pattern
then they get the default drawn on screen
then they choose colors
and then press "go"
and then it gets displayed as intended on the lights
9 mins
Joey Rafidi
Merritt Boyd
yeah, exactly
Merritt • 8 mins
okay okay
hmmm
one last thing
I think it would be annoying to add the python class for the pattern and also have to add the html/javascript corresponding to that pattern in the UI
do you think it's possible to wrap up all the patterns the server knows and ship them to the web UI on startup, then displaying the patterns based on that?
by "display" I mean show the options and params
the web UI won't do the rendering of the actual lights itself
it just needs to know what the available controls are
6 mins
Joey Rafidi
Merritt Boyd
yeah, absolutely; I started doing that for the old goodale stack, but it was too annoying to do in C
you have each pattern class have a method to list it's parameters and their types
and the webui takes that and templates up a config page
Merritt • 3 mins
great
that way when all the folks want to make their own patterns
they add in a class, the server learns about it somehow, and then it just goes
3 mins
Joey Rafidi
Merritt Boyd
yeah, they server has a list of pattern classes, and figures out the rest from there
Merritt • 2 mins
yep
hawt
this shouldn't be too bad
2 mins
Joey Rafidi
Merritt Boyd
awsome
I'm heading to lunch, catch you later
Merritt • 2 mins
Merritt Boyd
peace homie. thanks a lot for the help!
1 min
Joey Rafidi
History is off. Messages may disappear before people see them.
